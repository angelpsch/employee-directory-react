{"version":3,"sources":["components/Header/index.js","utils/API.js","components/TableContent/index.js","components/Labels/index.js","components/Search/index.js","components/Table/index.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","Header","classes","className","AppBar","position","Toolbar","variant","Typography","color","axios","get","StyledTableRow","withStyles","backgroundColor","palette","action","hover","TableRow","StyledTableCell","head","common","black","white","body","fontSize","TableCell","TableContents","toDisplay","map","user","index","key","name","first","last","registered","age","email","phone","Labels","handleButtonClick","align","Button","onClick","margin","width","Search","handleFormSubmit","handleInputChange","search","TextField","value","onChange","id","type","label","table","minWidth","MyTable","TableContainer","component","Paper","Table","aria-label","TableHead","TableBody","Home","state","users","sort","event","setState","target","a","b","preventDefault","filter","toLowerCase","includes","API","then","data","results","catch","err","console","error","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.59428ac0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar variant=\"dense\">\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Employee Directory\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","  \r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    getUsers: function() {\r\n        return axios.get(\"https://randomuser.me/api/?results=30&nat=US\");\r\n    }\r\n};","\r\nimport React from \"react\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\nexport default function TableContents({ toDisplay }) {\r\n    if (toDisplay[0]){\r\n        return (\r\n            toDisplay.map((user, index) => (\r\n                <StyledTableRow key={index}>\r\n                    <StyledTableCell>{`${user.name.first} ${user.name.last}`}</StyledTableCell>\r\n                    <StyledTableCell>{user.registered.age}</StyledTableCell>\r\n                    <StyledTableCell>{user.email}</StyledTableCell>\r\n                    <StyledTableCell>{user.phone}</StyledTableCell>\r\n                </StyledTableRow>\r\n            ))\r\n        );\r\n    } else {\r\n        return (\r\n            <StyledTableRow>\r\n                <StyledTableCell></StyledTableCell>\r\n                <StyledTableCell></StyledTableCell>\r\n                <StyledTableCell></StyledTableCell>\r\n                <StyledTableCell></StyledTableCell>\r\n            </StyledTableRow>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n\r\n\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.white,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\n\r\n  \r\n\r\nfunction Labels({ handleButtonClick }) {\r\n    return (\r\n        <StyledTableRow>\r\n            <StyledTableCell align='right'>Name</StyledTableCell>\r\n            <StyledTableCell align='right'>       \r\n                    <Button onClick={handleButtonClick}>            \r\n                    Sort by Length of Employment <FilterListIcon />\r\n                    </Button>\r\n     \r\n            </StyledTableCell>\r\n            <StyledTableCell align='right'>Email</StyledTableCell>\r\n            <StyledTableCell align='right'>Phone</StyledTableCell>\r\n        </StyledTableRow>\r\n    );\r\n}\r\n\r\nexport default Labels;","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n\r\nfunction Search({ handleFormSubmit, handleInputChange, search }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <form className={classes.root}>\r\n            <TextField value={search} variant='outlined' onChange={handleInputChange} id=\"name\" type=\"text\" label=\"Search By Name\"></TextField>\r\n            <Button variant='contained' onClick={handleFormSubmit} >Search</Button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableContents from \"../TableContent\";\r\nimport Labels from '../Labels'\r\nimport Search from '../Search'\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nexport default function MyTable({ toDisplay, handleFormSubmit, handleInputChange, handleButtonClick }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      \r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n          <TableCell>\r\n           <Search handleFormSubmit={handleFormSubmit} handleInputChange={handleInputChange}></Search>\r\n           </TableCell>\r\n            <TableCell>\r\n               <Labels handleButtonClick={handleButtonClick}/>\r\n            </TableCell>\r\n           \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          \r\n            <TableContents toDisplay={toDisplay}></TableContents>\r\n\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport Header from \"../components/Header\";\r\nimport API from \"../utils/API\";\r\nimport MyTable from \"../components/Table\";\r\n\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        search: \"\",\r\n        users: [],\r\n        toDisplay: [],\r\n        sort: \"none\"\r\n    };\r\n\r\n    handleInputChange = event => {\r\n      this.setState({ search: event.target.value });\r\n    };\r\n\r\n    componentDidMount() {\r\n        API.getUsers()\r\n            .then(({ data }) => {\r\n                this.setState({\r\n                    users: data.results,\r\n                    toDisplay: data.results\r\n                });\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n    \r\n    handleButtonClick = () => {\r\n        if (this.state.sort === \"none\" || this.state.sort === \"down\") {\r\n            this.setState({\r\n                sort: \"up\",\r\n                toDisplay: this.state.toDisplay.sort((a, b) => a.registered.age - b.registered.age)\r\n            });\r\n        } else {\r\n            this.setState({\r\n                sort: \"down\",\r\n                toDisplay: this.state.toDisplay.sort((a, b) => b.registered.age - a.registered.age)\r\n            });\r\n        }\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        \r\n        this.setState({\r\n            toDisplay: this.state.users.filter(user => user.name.first.toLowerCase().includes(this.state.search.toLowerCase()) || user.name.last.toLowerCase().includes(this.state.search.toLowerCase()))\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <MyTable toDisplay={this.state.toDisplay} handleFormSubmit={this.handleFormSubmit} handleInputChange={this.handleInputChange} handleButtonClick={this.handleButtonClick} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n    export default Home; ","import React from 'react';\nimport Home from './pages/Home'; \nimport 'fontsource-roboto';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}